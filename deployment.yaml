apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-resource-replicator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-resource-replicator
  namespace: kubernetes-resource-replicator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: kubernetes-resource-replicator
  name: kubernetes-resource-replicator
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - list
  - patch
  - create
  - get
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-resource-replicator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-resource-replicator
subjects:
  - kind: ServiceAccount
    name: kubernetes-resource-replicator
    namespace: kubernetes-resource-replicator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-resource-replicator
  namespace: kubernetes-resource-replicator
  labels:
    name: kubernetes-resource-replicator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kubernetes-resource-replicator
  template:
    metadata:
      labels:
        name: kubernetes-resource-replicator
    spec:
      automountServiceAccountToken: true
      serviceAccountName: kubernetes-resource-replicator
      containers:
        - name: kubernetes-resource-replicator
          image: "jasoncky96/kubernetes-resource-replicator:v0.1"
          imagePullPolicy: "Always"
          env:
            - name: CONFIG_LOOP_DURATION
              value: "10s"
            - name: CONFIG_DEBUG
              value: "false"
          resources:
            requests:
              cpu: 0.1
              memory: 15Mi
            limits:
              cpu: 0.2
              memory: 30Mi
